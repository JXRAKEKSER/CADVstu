{"ast":null,"code":"var _jsxFileName = \"/home/dmitriy/CADVSTU/client/src/components/Details/QuestionCard/CheckMarkButton/CheckMarkButton.jsx\";\nimport React, { useContext } from \"react\";\nimport { CheckMarkButtonProvider } from \"../QuestionCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CheckMarkButton(_ref) {\n  let {\n    toogleIsOpened,\n    isOpened,\n    mixClass\n  } = _ref;\n\n  function handleClick() {\n    toogleIsOpened(isOpened);\n  }\n\n  let customClassName = null;\n\n  if (isOpened) {\n    customClassName = \"check-mark-button check-mark-button_opened\";\n  } else {\n    customClassName = \"check-mark-button\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    className: `${customClassName} ${mixClass}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_c = CheckMarkButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckMarkButton\");","map":{"version":3,"sources":["/home/dmitriy/CADVSTU/client/src/components/Details/QuestionCard/CheckMarkButton/CheckMarkButton.jsx"],"names":["React","useContext","CheckMarkButtonProvider","CheckMarkButton","toogleIsOpened","isOpened","mixClass","handleClick","customClassName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,uBAAT,QAAwC,iBAAxC;;AAEA,eAAe,SAASC,eAAT,OAA8D;AAAA,MAArC;AAACC,IAAAA,cAAD;AAAiBC,IAAAA,QAAjB;AAA2BC,IAAAA;AAA3B,GAAqC;;AAEzE,WAASC,WAAT,GAAsB;AAClBH,IAAAA,cAAc,CAACC,QAAD,CAAd;AACH;;AACD,MAAIG,eAAe,GAAG,IAAtB;;AACA,MAAGH,QAAH,EAAY;AACRG,IAAAA,eAAe,GAAG,4CAAlB;AACH,GAFD,MAEK;AACDA,IAAAA,eAAe,GAAG,mBAAlB;AACH;;AACD,sBAEI;AAAQ,IAAA,OAAO,EAAED,WAAjB;AAA8B,IAAA,SAAS,EAAG,GAAEC,eAAgB,IAAGF,QAAS;AAAxE;AAAA;AAAA;AAAA;AAAA,UAFJ;AAMH;KAjBuBH,e","sourcesContent":["import React, { useContext } from \"react\";\nimport { CheckMarkButtonProvider } from \"../QuestionCard\";\n\nexport default function CheckMarkButton({toogleIsOpened, isOpened, mixClass}){\n    \n    function handleClick(){\n        toogleIsOpened(isOpened);\n    }\n    let customClassName = null;\n    if(isOpened){\n        customClassName = \"check-mark-button check-mark-button_opened\";\n    }else{\n        customClassName = \"check-mark-button\";\n    }\n    return(\n        \n        <button onClick={handleClick} className={`${customClassName} ${mixClass}`}></button>\n        \n        \n    )\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/dmitriy/CADVSTU/client/src/components/Details/QuestionCard/QuestionCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport CheckMarkButton from './CheckMarkButton/CheckMarkButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QuestionCard(_ref) {\n  _s();\n\n  let {\n    questionData\n  } = _ref;\n  const [isOpened, setIsOpened] = useState(false);\n\n  const toogleIsOpened = value => {\n    setIsOpened(!value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isOpened ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-card\",\n      children: [/*#__PURE__*/_jsxDEV(CheckMarkButton, {\n        toogleIsOpened: toogleIsOpened,\n        isOpened: isOpened\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"question-card__text\",\n        children: questionData.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-card\",\n      children: [/*#__PURE__*/_jsxDEV(CheckMarkButton, {\n        toogleIsOpened: toogleIsOpened,\n        isOpened: isOpened\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"question-card__text question-card__text_opened\",\n        children: questionData === null || questionData === void 0 ? void 0 : questionData.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question-card__answer\",\n        children: questionData === null || questionData === void 0 ? void 0 : questionData.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(QuestionCard, \"9ncJBgm3/jnwyg5t+wlOFkVYK9k=\");\n\n_c = QuestionCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"sources":["/home/dmitriy/CADVSTU/client/src/components/Details/QuestionCard/QuestionCard.jsx"],"names":["React","useState","CheckMarkButton","QuestionCard","questionData","isOpened","setIsOpened","toogleIsOpened","value","question","answer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,mCAA5B;;;AAEA,eAAe,SAASC,YAAT,OAAqC;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACjD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMM,cAAc,GAAIC,KAAD,IAAW;AAACF,IAAAA,WAAW,CAAC,CAACE,KAAF,CAAX;AAAoB,GAAvD;;AACC,sBACI;AAAA,cACK,CAACH,QAAD,gBACD;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI,QAAC,eAAD;AAAiB,QAAA,cAAc,EAAIE,cAAnC;AAAmD,QAAA,QAAQ,EAAEF;AAA7D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA,kBAAqCD,YAAY,CAACK;AAAlD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,gBAMG;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI,QAAC,eAAD;AAAiB,QAAA,cAAc,EAAIF,cAAnC;AAAmD,QAAA,QAAQ,EAAEF;AAA7D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,gDAAd;AAAA,kBAAgED,YAAhE,aAAgEA,YAAhE,uBAAgEA,YAAY,CAAEK;AAA9E;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA,kBAAsCL,YAAtC,aAAsCA,YAAtC,uBAAsCA,YAAY,CAAEM;AAApD;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAPR,mBADJ;AAkBH;;GArBuBP,Y;;KAAAA,Y","sourcesContent":["import React, { useState } from \"react\";\nimport CheckMarkButton from './CheckMarkButton/CheckMarkButton'\n\nexport default function QuestionCard({questionData}){\n   const [isOpened, setIsOpened] = useState(false);\n   const toogleIsOpened = (value) => {setIsOpened(!value)}\n    return(\n        <>\n            {!isOpened ? (\n            <div className=\"question-card\">\n                <CheckMarkButton toogleIsOpened = {toogleIsOpened} isOpened={isOpened}/>\n                <h3 className=\"question-card__text\">{questionData.question}</h3>\n            </div>\n            ) : (\n                <div className=\"question-card\">\n                    <CheckMarkButton toogleIsOpened = {toogleIsOpened} isOpened={isOpened}/>\n                    <h3 className=\"question-card__text question-card__text_opened\">{questionData?.question}</h3>\n                    <p className=\"question-card__answer\">{questionData?.answer}</p>\n            </div>\n            )}\n        </>\n            \n        \n    )\n}"]},"metadata":{},"sourceType":"module"}